name: CI

run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€

on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
        
      - name: Install NPM dependencies
        run: |
          npm install
          echo "Dependencies have been installed."

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        run: |
          docker build -t devsecops_project_1:${{ github.run_id }} .
      
      - name: Trivy scan
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image devsecops_project_1:${{ github.run_id }} --severity HIGH,CRITICAL --format json > trivy-report.json

      - name: Docker tag image as latest
        run: |
          docker tag devsecops_project_1:${{ github.run_id }} ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project_1:latest

      - name: Docker push latest image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project_1:latest

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install Snyk CLI
        uses: snyk/actions/cli@master
        with:
          snyc-token: ${{ secrets.SNYK_TOKEN }}
      
      - name: Snyk auth
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}
      
      - name: Snyk Container monitor
        run: |
          snyk container monitor ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project_1:latest --file=./Dockerfile
        working-directory: ./application
      
      - name: Snyk to check for vulnerabilities in docker image
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project_1:latest
          args: --file=application/Dockerfile --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
      # - name: Azure CLI script
      #   uses: azure/cli@v2
      #   with:
      #     azcliversion: latest
      #     inlineScript: |
      #       az account show
      
      # - name: setup k8s profile
      #   run: |
      #     export MY_RESOURCE_GROUP_NAME="zekn-aks-rg"
      #     export MY_CLUSTER_NAME="zekn-aks-cluster"
      #     az aks get-credentials --admin --name $MY_CLUSTER_NAME --overwrite-existing --resource-group $MY_RESOURCE_GROUP_NAME
          
      # - name: Deploy to AKS
      #   run: |
      #     kubectl apply -f k8s/deployment.yaml
      #     kubectl apply -f k8s/service.yaml
